
/*
 * This file is part of Jkop
 * Copyright (c) 2016-2018 Job and Esther Technologies Oy
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

"use strict";var CaveColor = function() {this.red = null;this.green = null;this.blue = null;this.alpha = null;};var P = CaveColor.prototype;CaveColor.colorBlack = null;CaveColor.colorWhite = null;P._t = {"CaveColor" : true};CaveColor.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveColor"] === true);};CaveColor.black = function() {if(!(CaveColor.colorBlack != null)) {CaveColor.colorBlack = CaveColor.instance("black");}return(CaveColor.colorBlack);};CaveColor.white = function() {if(!(CaveColor.colorWhite != null)) {CaveColor.colorWhite = CaveColor.instance("white");}return(CaveColor.colorWhite);};CaveColor.asColorWithString = function(o) {return(CaveColor.NEWWithString(o));};CaveColor.asColorWithObject = function(o) {if(!(o != null)) {return(null);}if(CaveColor.IS_INSTANCE(o)) {return(o);}if(typeof(o) === 'string') {return(CaveColor.instance(o));}return(null);};CaveColor.instance = function(str) {if(str === "none") {return(null);}var v = CaveColor.NEW();if(!(str == null)) {if(v.parse(str) === false) {v = null;}}return(v);};CaveColor.forString = function(str) {if(str === "none") {return(null);}var v = CaveColor.NEW();if(!(str == null)) {if(v.parse(str) === false) {v = null;}}return(v);};CaveColor.forRGBDouble = function(r, g, b) {var v = CaveColor.NEW();v.setRed(r);v.setGreen(g);v.setBlue(b);v.setAlpha(1.0);return(v);};CaveColor.forRGBADouble = function(r, g, b, a) {var v = CaveColor.NEW();v.setRed(r);v.setGreen(g);v.setBlue(b);v.setAlpha(a);return(v);};CaveColor.forRGB = function(r, g, b) {var v = CaveColor.NEW();v.setRed(r / 255.0);v.setGreen(g / 255.0);v.setBlue(b / 255.0);v.setAlpha(1.0);return(v);};CaveColor.forRGBA = function(r, g, b, a) {var v = CaveColor.NEW();v.setRed(r / 255.0);v.setGreen(g / 255.0);v.setBlue(b / 255.0);v.setAlpha(a / 255.0);return(v);};CaveColor.forRGBAInteger = function(value) {var v = CaveColor.NEW();v.setRed((value >> 24 & 255) / 255.0);v.setGreen((value >> 16 & 255) / 255.0);v.setBlue((value >> 8 & 255) / 255.0);v.setAlpha((value & 255) / 255.0);return(v);};CaveColor.forARGBInteger = function(value) {var v = CaveColor.NEW();v.setAlpha((value >> 24 & 255) / 255.0);v.setRed((value >> 16 & 255) / 255.0);v.setGreen((value >> 8 & 255) / 255.0);v.setBlue((value & 255) / 255.0);return(v);};CaveColor.forRGBInteger = function(value) {var v = CaveColor.NEW();v.setRed((value >> 16 & 255) / 255.0);v.setGreen((value >> 8 & 255) / 255.0);v.setBlue((value & 255) / 255.0);v.setAlpha(1.0);return(v);};CaveColor.NEW = function() {var v = new CaveColor();return(v.CTOR());};P.CTOR = function() {this.alpha = 0.0;this.blue = 0.0;this.green = 0.0;this.red = 0.0;return(this);};CaveColor.NEWWithString = function(str) {var v = new CaveColor();return(v.CTORWithString(str));};P.CTORWithString = function(str) {this.alpha = 0.0;this.blue = 0.0;this.green = 0.0;this.red = 0.0;this.parse(str);return(this);};P.getRedInt = function() {return(~~((this.red * 255)));};P.getGreenInt = function() {return(~~((this.green * 255)));};P.getBlueInt = function() {return(~~((this.blue * 255)));};P.getAlphaInt = function() {return(~~((this.alpha * 255)));};P.isWhite = function() {if(this.red + this.green + this.blue >= 3.0) {return(true);}return(false);};P.isBlack = function() {if(this.red + this.green + this.blue <= 0) {return(true);}return(false);};P.isLightColor = function() {if(this.red + this.green + this.blue >= 1.5) {return(true);}return(false);};P.isDarkColor = function() {return(!this.isLightColor());};P.hexCharToInt = function(c) {if(c.charCodeAt() >= '0'.charCodeAt() && c.charCodeAt() <= '9'.charCodeAt()) {return(c.charCodeAt() - '0'.charCodeAt());}if(c.charCodeAt() >= 'a'.charCodeAt() && c.charCodeAt() <= 'f'.charCodeAt()) {return(10 + ((c).charCodeAt()) - (('a').charCodeAt()));}if(c.charCodeAt() >= 'A'.charCodeAt() && c.charCodeAt() <= 'F'.charCodeAt()) {return(10 + ((c).charCodeAt()) - (('A').charCodeAt()));}return(0);};P.hexDigitToInt = function(hx) {if(CapeString.isEmpty(hx)) {return(0);}var c0 = this.hexCharToInt(CapeString.charAt(hx, 0));if(CapeString.getLength(hx) < 2) {return(c0);}return(c0 * 16 + this.hexCharToInt(CapeString.charAt(hx, 1)));};P.parse = function(s) {if(s == null) {this.red = 0.0;this.green = 0.0;this.blue = 0.0;this.alpha = 1.0;return(true);}var v = true;this.alpha = 1.0;if(CapeString.charAt(s, 0) === '#') {var slength = CapeString.getLength(s);if(slength === 7 || slength === 9) {this.red = this.hexDigitToInt(CapeString.getSubStringWithStringAndSignedIntegerAndSignedInteger(s, 1, 2)) / 255.0;this.green = this.hexDigitToInt(CapeString.getSubStringWithStringAndSignedIntegerAndSignedInteger(s, 3, 2)) / 255.0;this.blue = this.hexDigitToInt(CapeString.getSubStringWithStringAndSignedIntegerAndSignedInteger(s, 5, 2)) / 255.0;if(slength === 9) {this.alpha = this.hexDigitToInt(CapeString.getSubStringWithStringAndSignedIntegerAndSignedInteger(s, 7, 2)) / 255.0;}v = true;}else {this.red = (this.green = (this.blue = 0.0));v = false;}}else if(s === "black") {this.red = 0.0;this.green = 0.0;this.blue = 0.0;}else if(s === "white") {this.red = 1.0;this.green = 1.0;this.blue = 1.0;}else if(s === "red") {this.red = 1.0;this.green = 0.0;this.blue = 0.0;}else if(s === "green") {this.red = 0.0;this.green = 1.0;this.blue = 0.0;}else if(s === "blue") {this.red = 0.0;this.green = 0.0;this.blue = 1.0;}else if(s === "lightred") {this.red = 0.6;this.green = 0.4;this.blue = 0.4;}else if(s === "lightgreen") {this.red = 0.4;this.green = 0.6;this.blue = 0.4;}else if(s === "lightblue") {this.red = 0.4;this.green = 0.4;this.blue = 0.6;}else if(s === "yellow") {this.red = 1.0;this.green = 1.0;this.blue = 0.0;}else if(s === "cyan") {this.red = 0.0;this.green = 1.0;this.blue = 1.0;}else if(s === "orange") {this.red = 1.0;this.green = 0.5;this.blue = 0.0;}else {v = false;}return(v);};P.decimalStringToInteger = function(str) {if(CapeString.isEmpty(str)) {return(0);}var v = 0;var m = CapeString.getLength(str);var n = 0;for(n = 0 ; n < m ; n++) {var c = CapeString.charAt(str, n);if(c.charCodeAt() >= '0'.charCodeAt() && c.charCodeAt() <= '9'.charCodeAt()) {v = v * 10;v += (c.charCodeAt() - '0'.charCodeAt());}else {break;}}return(v);};P.dup = function(arg) {var f = 1.0;if(!(arg == null)) {if(arg === "light") {f = 1.2;}else if(arg === "dark") {f = 0.8;}else if(CapeString.endsWithWithStringAndString(arg, "%")) {f = this.decimalStringToInteger(arg) / 100.0;}}var v = CaveColor.NEW();if(f > 1.0) {v.setRed(this.red + (1.0 - this.red) * (f - 1.0));v.setGreen(this.green + (1.0 - this.green) * (f - 1.0));v.setBlue(this.blue + (1.0 - this.blue) * (f - 1.0));}else if(f < 1.0) {v.setRed(this.red * f);v.setGreen(this.green * f);v.setBlue(this.blue * f);}else {v.setRed(this.red);v.setGreen(this.green);v.setBlue(this.blue);}v.setAlpha(this.alpha);return(v);};P.toRGBAInt32 = function() {var v = 0;v |= ((~~((this.red * 255)) & 255)) << 24;v |= ((~~((this.green * 255)) & 255)) << 16;v |= ((~~((this.blue * 255)) & 255)) << 8;v |= (~~((this.alpha * 255)) & 255);return(v);};P.toARGBInt32 = function() {var v = 0;v |= ((~~((this.alpha * 255)) & 255)) << 24;v |= ((~~((this.red * 255)) & 255)) << 16;v |= ((~~((this.green * 255)) & 255)) << 8;v |= (~~((this.blue * 255)) & 255);return(v);};P.toString = function() {return(this.toRgbaString());};P.toRgbString = function() {var r = CapeString.forIntegerHex(~~((this.red * 255)), 0);var g = CapeString.forIntegerHex(~~((this.green * 255)), 0);var b = CapeString.forIntegerHex(~~((this.blue * 255)), 0);var sb = CapeStringBuilder.NEW();sb.appendString("#");this.to2Digits(r, sb);this.to2Digits(g, sb);this.to2Digits(b, sb);return(sb.toString());};P.toRgbaString = function() {var a = CapeString.forIntegerHex(~~((this.alpha * 255)), 0);return((this.toRgbString()) + a);};P.toHtmlRgbaString = function() {var sb = CapeStringBuilder.NEW();sb.appendString("rgba(");sb.appendString(CapeString.forInteger(~~((this.red * 255))));sb.appendCharacter(',');sb.appendString(CapeString.forInteger(~~((this.green * 255))));sb.appendCharacter(',');sb.appendString(CapeString.forInteger(~~((this.blue * 255))));sb.appendCharacter(',');sb.appendString(CapeString.forDouble(this.alpha));sb.appendString(")");return(sb.toString());};P.toHtmlCompatibleString = function() {if(this.alpha >= 1.0) {return(this.toRgbString());}return(this.toHtmlRgbaString());};P.toRGBInteger = function() {var v = ~~((this.blue * 255));v |= ~~((this.green * 255)) << 8;v |= ~~((this.red * 255)) << 16;return(v);};P.to2Digits = function(val, sb) {if(CapeString.getLength(val) === 1) {sb.appendCharacter('0');}sb.appendString(val);};P.getRed = function() {return(this.red);};P.setRed = function(v) {this.red = v;return(this);};P.getGreen = function() {return(this.green);};P.setGreen = function(v) {this.green = v;return(this);};P.getBlue = function() {return(this.blue);};P.setBlue = function(v) {this.blue = v;return(this);};P.getAlpha = function() {return(this.alpha);};P.setAlpha = function(v) {this.alpha = v;return(this);};var CaveFontDescription = function() {this.file = null;this.name = null;this.bold = null;this.italic = null;this.underline = null;this.size = null;};var P = CaveFontDescription.prototype;P._t = {"CaveFontDescription" : true};CaveFontDescription.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveFontDescription"] === true);};CaveFontDescription.forDefault = function() {return(CaveFontDescription.NEW());};CaveFontDescription.forFile = function(file, size) {var v = CaveFontDescription.NEW();v.setFile(file);if(size != null) {v.setSize(size);}return(v);};CaveFontDescription.forName = function(name, size) {var v = CaveFontDescription.NEW();v.setName(name);if(size != null) {v.setSize(size);}return(v);};CaveFontDescription.NEW = function() {var v = new CaveFontDescription();return(v.CTOR());};P.CTOR = function() {this.size = null;this.underline = false;this.italic = false;this.bold = false;this.name = null;this.file = null;this.file = null;this.name = "Sans";this.size = CaveLength.forMicroMeters(2500);this.bold = false;this.italic = false;this.underline = false;return(this);};P.dup = function() {var v = CaveFontDescription.NEW();v.file = this.file;v.name = this.name;v.bold = this.bold;v.italic = this.italic;v.underline = this.underline;v.size = this.size;return(v);};P.getFile = function() {return(this.file);};P.setFile = function(v) {this.file = v;return(this);};P.getName = function() {return(this.name);};P.setName = function(v) {this.name = v;return(this);};P.getBold = function() {return(this.bold);};P.setBold = function(v) {this.bold = v;return(this);};P.getItalic = function() {return(this.italic);};P.setItalic = function(v) {this.italic = v;return(this);};P.getUnderline = function() {return(this.underline);};P.setUnderline = function(v) {this.underline = v;return(this);};P.getSize = function() {return(this.size);};P.setSize = function(v) {this.size = v;return(this);};var CaveGuiApplicationContext = function() {this.styles = null;this.errorCounter = null;this.warningCounter = null;this.infoCounter = null;this.debugCounter = null;};var P = CaveGuiApplicationContext.prototype;P._t = {"CaveGuiApplicationContext" : true,"CapeApplicationContext" : true,"CapeLoggingContext" : true};CaveGuiApplicationContext.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveGuiApplicationContext"] === true);};CaveGuiApplicationContext.NEW = function() {var v = new CaveGuiApplicationContext();return(v.CTOR());};P.CTOR = function() {this.debugCounter = 0;this.infoCounter = 0;this.warningCounter = 0;this.errorCounter = 0;this.styles = null;return(this);};P.setStyle = function(id, style) {if(!(this.styles != null)) {this.styles = new Map();}this.styles.set(id, style);};P.getStyle = function(id) {if(!(this.styles != null)) {return(null);}if(!(id != null)) {return(null);}return(this.styles.get(id));};P.getStyleObject = function(id, style) {var ss = CapeMap.getValue(this.styles, id);if(!(ss != null)) {return(null);}return(CapeMap.getValue(ss, style));};P.getStyleString = function(id, style) {return(CapeString.asStringWithObject(this.getStyleObject(id, style)));};P.getStyleColor = function(id, style) {return(CaveColor.asColorWithObject(this.getStyleObject(id, style)));};P.getStylePixels = function(id, style) {return(this.getHeightValue(this.getStyleString(id, style)));};P.getApplicationDataDirectory = function() {};P.getResourceImage = function(id) {};P.getImageForBuffer = function(buffer, mimeType) {};P.showMessageDialogWithStringAndString = function(title, message) {};P.showMessageDialogWithStringAndStringAndFunctionVoid = function(title, message, callback) {};P.showConfirmDialog = function(title, message, okcallback, cancelcallback) {};P.showErrorDialogWithString = function(message) {};P.showErrorDialogWithStringAndFunctionVoid = function(message, callback) {};P.getScreenTopMargin = function() {};P.getScreenWidth = function() {};P.getScreenHeight = function() {};P.getScreenDensity = function() {};P.getHeightValue = function(spec) {};P.getWidthValue = function(spec) {};P.startTimer = function(timeout, callback) {};P.px = function(spec) {return(this.getHeightValue(spec));};P.logError = function(message) {console.log("[ERROR] " + message);this.errorCounter++;};P.logWarning = function(message) {console.log("[WARNING] " + message);this.warningCounter++;};P.logInfo = function(message) {console.log("[INFO] " + message);this.infoCounter++;};P.logDebug = function(message) {console.log("[DEBUG] " + message);this.debugCounter++;};P.logStatus = function(message) {console.log("[STATUS] " + message);};P.isInDebugMode = function() {return(false);};P.getErrorCount = function() {return(this.errorCounter);};P.getWarningCount = function() {return(this.warningCounter);};P.getInfoCount = function() {return(this.infoCounter);};P.getDebugCount = function() {return(this.debugCounter);};P.resetCounters = function() {this.errorCounter = 0;this.warningCounter = 0;this.infoCounter = 0;this.debugCounter = 0;};var CaveGuiApplicationContextForBrowser = function() {CaveGuiApplicationContext.call(this);this.imageCache = null;};CaveGuiApplicationContextForBrowser.prototype = (function(o) { function F() {}; F.prototype = o; return(new F()); }) (CaveGuiApplicationContext.prototype);var P = CaveGuiApplicationContextForBrowser.prototype;P.constructor = CaveGuiApplicationContextForBrowser;CaveGuiApplicationContextForBrowser.instance = null;P._t = {"CaveGuiApplicationContextForBrowser" : true,"CaveGuiApplicationContext" : true,"CapeApplicationContext" : true,"CapeLoggingContext" : true};CaveGuiApplicationContextForBrowser.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveGuiApplicationContextForBrowser"] === true);};CaveGuiApplicationContextForBrowser.NEW = function() {var v = new CaveGuiApplicationContextForBrowser();return(v.CTOR());};P.CTOR = function() {this.imageCache = new Map();if(CaveGuiApplicationContext.prototype.CTOR.call(this) == null) {return(null);}return(this);};CaveGuiApplicationContextForBrowser.getInstance = function() {if(!(CaveGuiApplicationContextForBrowser.instance != null)) {CaveGuiApplicationContextForBrowser.instance = CaveGuiApplicationContextForBrowser.NEW();}return(CaveGuiApplicationContextForBrowser.instance);};P.clearResources = function() {this.imageCache = new Map();};P.prepareResources = function(resources, callback) {if(resources == null || resources.length < 1) {if(callback != null) {callback();}return;}var loadedResources = 0;var numberOfFonts = 0;var totalResources = resources.length;var onResourceLoadingComplete = function(){loadedResources++;if(loadedResources >= totalResources) {this.logInfo("All resources have been loaded");if(callback != null) {callback();}}}.bind(this);var onLoad = function(){this.logDebug("Resource loaded");onResourceLoadingComplete();}.bind(this);var onError = function(){this.logError("Failed to load resource");onResourceLoadingComplete();}.bind(this);var onFontLoad = function(){for(var i = 0 ; i < numberOfFonts ; i++) {this.logDebug("Resource loaded");onResourceLoadingComplete();}numberOfFonts = 0;}.bind(this);var onFontError = function(){for(var i = 0 ; i < numberOfFonts ; i++) {this.logError("Failed to load resource");onResourceLoadingComplete();}numberOfFonts = 0;}.bind(this);var style = null;if(resources != null) {var n = 0;var m = resources.length;for(n = 0 ; n < m ; n++) {var path = resources[n];if(path != null) {var pp = path;var slash = CapeString.lastIndexOfWithStringAndCharacterAndSignedInteger(pp, '/', -1);if(slash >= 0) {pp = CapeString.getSubStringWithStringAndSignedInteger(pp, slash + 1);}var dot = CapeString.lastIndexOfWithStringAndCharacterAndSignedInteger(pp, '.', -1);if(dot < 0) {onResourceLoadingComplete();continue;}var ext = CapeString.getSubStringWithStringAndSignedInteger(pp, dot + 1);pp = CapeString.getSubStringWithStringAndSignedIntegerAndSignedInteger(pp, 0, dot);if(CapeString.equalsIgnoreCase(ext, "png") || CapeString.equalsIgnoreCase(ext, "jpg") || CapeString.equalsIgnoreCase(ext, "gif")) {this.logDebug("Start loading resource: `" + pp + ": `" + path + "'");var imgo = CaveImageForBrowser.NEW();var image = null;image = new Image();image.onload = onLoad;image.onerror = onError;image.src = path;imgo.image = image;this.imageCache.set(pp, imgo);}else if(CapeString.equalsIgnoreCase(ext, "otf") || CapeString.equalsIgnoreCase(ext, "ttf")) {this.logDebug("Start loading resource: `" + pp + ": `" + path + "'");if(CaveHTMLDOM.doesBrowserSupportFontLoading()) {var head = CaveHTMLDOM.getDocumentHead();if(style == null) {style = CaveHTMLDOM.createElement("style");CaveHTMLDOM.appendChild(head, style);}CaveHTMLDOM.appendChild(style, CaveHTMLDOM.createTextNode("@font-face { font-family: " + pp + "; src: url('" + path + "')}"));numberOfFonts++;document.fonts.load("12px " + pp).then(onFontLoad, onFontError);}else {this.logWarning("Browser does not support font loading: `" + path + "'");onResourceLoadingComplete();}}else {this.logWarning("Unsupported resource file type `" + ext + "': `" + path + "'");onResourceLoadingComplete();}}}}};P.getResourceImage = function(id) {return(CapeMap.getValue(this.imageCache, id));};P.getImageForBuffer = function(buffer, mimeType) {if(buffer == null) {return(null);}var b64str = CapeBase64Encoder.encode(buffer);var imgo = CaveImageForBrowser.NEW();var image = null;image = new Image();image.src = "data:" + mimeType + ";base64," + b64str;imgo.image = image;return(imgo);};P.showConfirmDialog = function(title, message, okcallback, cancelcallback) {var result = false;result = confirm(message);if(result) {if(okcallback != null) {okcallback();}}else if(cancelcallback != null) {cancelcallback();}};P.showMessageDialogWithStringAndString = function(title, message) {this.showMessageDialogWithStringAndStringAndFunctionVoid(title, message, null);};P.showMessageDialogWithStringAndStringAndFunctionVoid = function(title, message, callback) {window.alert(message);if(callback != null) {callback();}};P.showErrorDialogWithString = function(message) {this.showErrorDialogWithStringAndFunctionVoid(message, null);};P.showErrorDialogWithStringAndFunctionVoid = function(message, callback) {window.alert(message);if(callback != null) {callback();}};P.getScreenTopMargin = function() {return(0);};P.getScreenWidth = function() {var v = 0;v = window.screen.availWidth;return(v);};P.getScreenHeight = function() {var v = 0;v = window.screen.availHeight;return(v);};P.getScreenDensity = function() {var ppi = 0;var div = document.createElement("div");div.setAttribute("style", "width: 1.3in; padding: 0; visibility: hidden; position: fixed; left: 0; top: 0;");var bodys = document.getElementsByTagName("body");bodys[0].appendChild(div);ppi = div.offsetWidth;if(ppi < 1) {ppi = 1;}bodys[0].removeChild(div);var qs = CapeEnvironment.getQueryString();if(CapeString.isEmpty(qs) === false) {var array = CapeString.split(qs, '&', 0);if(array != null) {var n = 0;var m = array.length;for(n = 0 ; n < m ; n++) {var q = array[n];if(q != null) {if(CapeString.startsWithWithStringAndStringAndSignedInteger(q, "jkopDpi=", 0) === false) {continue;}var val = CapeString.getSubStringWithStringAndSignedInteger(q, 8);if(CapeString.isEmpty(val) === false) {ppi = CapeString.toInteger(val);}break;}}}}return(ppi);};P.getHeightValue = function(spec) {return(CaveLength.asPoints(spec, this.getScreenDensity()));};P.getWidthValue = function(spec) {return(CaveLength.asPoints(spec, this.getScreenDensity()));};P.startTimer = function(timeout, callback) {setTimeout(callback, timeout);};var CaveGuiApplicationContextForHTML = function() {CaveGuiApplicationContextForBrowser.call(this);};CaveGuiApplicationContextForHTML.prototype = (function(o) { function F() {}; F.prototype = o; return(new F()); }) (CaveGuiApplicationContextForBrowser.prototype);var P = CaveGuiApplicationContextForHTML.prototype;P.constructor = CaveGuiApplicationContextForHTML;P._t = {"CaveGuiApplicationContextForHTML" : true,"CaveGuiApplicationContextForBrowser" : true,"CaveGuiApplicationContext" : true,"CapeApplicationContext" : true,"CapeLoggingContext" : true};CaveGuiApplicationContextForHTML.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveGuiApplicationContextForHTML"] === true);};CaveGuiApplicationContextForHTML.NEW = function() {var v = new CaveGuiApplicationContextForHTML();return(v.CTOR());};P.CTOR = function() {if(CaveGuiApplicationContextForBrowser.prototype.CTOR.call(this) == null) {return(null);}return(this);};var CaveHTMLDOM = function() {};var P = CaveHTMLDOM.prototype;P._t = {"CaveHTMLDOM" : true};CaveHTMLDOM.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveHTMLDOM"] === true);};CaveHTMLDOM.NEW = function() {var v = new CaveHTMLDOM();return(v.CTOR());};P.CTOR = function() {return(this);};CaveHTMLDOM.colorToRGBA = function(color) {if(!(color != null)) {return(null);}return(color.toHtmlRgbaString());};CaveHTMLDOM.isBrowser = function(id) {var v = false;v = navigator.userAgent.toLowerCase().indexOf(id) > -1;return(v);};CaveHTMLDOM.isWebKit = function() {return(CaveHTMLDOM.isBrowser("webkit"));};CaveHTMLDOM.isFirefox = function() {return(CaveHTMLDOM.isBrowser("firefox"));};CaveHTMLDOM.isMobile = function() {return(CaveHTMLDOM.isBrowser("mobile"));};CaveHTMLDOM.isChrome = function() {return(CaveHTMLDOM.isBrowser("chrome"));};CaveHTMLDOM.isEdge = function() {return(CaveHTMLDOM.isBrowser("edge"));};CaveHTMLDOM.isSafari = function() {return(CaveHTMLDOM.isBrowser("safari"));};CaveHTMLDOM.createElement = function(type) {return(document.createElement(type));};CaveHTMLDOM.getDocument = function() {return(document);};CaveHTMLDOM.getDocumentBody = function() {return(CaveHTMLDOM.getElementsByTagName(CaveHTMLDOM.getDocument(), "body")[0]);};CaveHTMLDOM.getDocumentHead = function() {return(CaveHTMLDOM.getElementsByTagName(CaveHTMLDOM.getDocument(), "head")[0]);};CaveHTMLDOM.getParentElement = function(element) {if(!(element != null)) {return(null);}return(element.parentElement);};CaveHTMLDOM.getElementByIdWithString = function(id) {return(CaveHTMLDOM.getElementByIdWithObjectAndString(CaveHTMLDOM.getDocument(), id));};CaveHTMLDOM.getElementByIdWithObjectAndString = function(element, id) {if(!(element != null)) {return(null);}if(!(id != null)) {return(null);}return(element.getElementById(id));};CaveHTMLDOM.getElementsByClassName = function(element, classname) {if(!(element != null)) {return(null);}if(!(classname != null)) {return(null);}return(element.getElementsByClassName(classname));};CaveHTMLDOM.getElementsByTagName = function(element, tagname) {if(!(element != null)) {return(null);}if(!(tagname != null)) {return(null);}return(element.getElementsByTagName(tagname));};CaveHTMLDOM.appendChild = function(element, child) {if(!(element != null)) {return;}if(!(child != null)) {return;}element.appendChild(child);};CaveHTMLDOM.appendToBody = function(element) {CaveHTMLDOM.appendChild(CaveHTMLDOM.getDocumentBody(), element);};CaveHTMLDOM.remove = function(element) {if(!(element != null)) {return;}var parent = CaveHTMLDOM.getParentElement(element);if(!(parent != null)) {return;}parent.removeChild(element);};CaveHTMLDOM.getFirstChild = function(element) {if(!(element != null)) {return(null);}return(element.firstChild);};CaveHTMLDOM.getChild = function(element, index) {if(!(element != null)) {return(null);}return(element.childNodes[index]);};CaveHTMLDOM.getAttribute = function(element, attr) {if(!(element != null)) {return(null);}if(!CapeString.isNotEmpty(attr)) {return(null);}return(element.getAttribute(attr));};CaveHTMLDOM.setAttribute = function(element, attr, val) {if(!(element != null)) {return;}if(!(attr != null)) {return;}if(val == null) {element.removeAttribute(attr);}else {element.setAttribute(attr, val);}};CaveHTMLDOM.getInnerHTML = function(element) {if(!(element != null)) {return(null);}return(element.innerHTML);};CaveHTMLDOM.setInnerHTML = function(element, text) {if(!(element != null)) {return;}element.innerHTML = text;};P.setValue = function(element, val) {if(!(element != null)) {return;}element.value = val;};CaveHTMLDOM.getValue = function(element) {if(!(element != null)) {return(null);}return(element.value);};CaveHTMLDOM.setStyle = function(element, key, val) {if(!(element != null)) {return;}if(!CapeString.isNotEmpty(key)) {return;}var v = val;if(CapeString.isEmpty(val)) {v = "";}element.style[key] = v;};CaveHTMLDOM.getStyle = function(element, key) {if(!(element != null)) {return(null);}if(!CapeString.isNotEmpty(key)) {return(null);}return(element.style[key]);};CaveHTMLDOM.removeStyle = function(element, key) {if(!(element != null)) {return;}if(!CapeString.isNotEmpty(key)) {return;}element.style[key] = null;};CaveHTMLDOM.addEventListener = function(element, event, listener) {if(!(element != null)) {return;}if(!CapeString.isNotEmpty(event)) {return;}if(!(listener != null)) {return;}element.addEventListener(event, listener);};CaveHTMLDOM.getClassList = function(element) {if(!(element != null)) {return(null);}return(element.classList);};CaveHTMLDOM.addToClassList = function(element, xclass) {if(!(element != null)) {return;}if(!(xclass != null)) {return;}element.classList.add(xclass);};CaveHTMLDOM.removeFromClassList = function(element, xclass) {if(!(element != null)) {return;}if(!(xclass != null)) {return;}element.classList.remove(xclass);};CaveHTMLDOM.setFocus = function(element) {if(!(element != null)) {return;}element.focus();};CaveHTMLDOM.createTextNode = function(text) {if(!(text != null)) {return(null);}return(document.createTextNode(text));};CaveHTMLDOM.doesBrowserSupportFontLoading = function() {var v = false;if(document["fonts"]) {v = true;}return(v);};CaveHTMLDOM.setFontFamily = function(element, fontFamily) {if(!(element != null)) {return;}if(!(fontFamily != null)) {return;}if(CaveHTMLDOM.doesBrowserSupportFontLoading() || CaveHTMLDOM.isFontStandard(fontFamily)) {CaveHTMLDOM.setStyle(element, "font-family", fontFamily);}};CaveHTMLDOM.isFontStandard = function(fontFamily) {if(fontFamily === "Arial" || fontFamily === "Times New Roman" || fontFamily === "serif" || fontFamily === "sans-serif" || fontFamily === "Helvetica" || fontFamily === "Courier New" || fontFamily === "Courier" || fontFamily === "monospace" || fontFamily === "Verdana") {return(true);}return(false);};var CaveImage = function() {};var P = CaveImage.prototype;P._t = {"CaveImage" : true};CaveImage.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveImage"] === true);};CaveImage.NEW = function() {var v = new CaveImage();return(v.CTOR());};P.CTOR = function() {return(this);};P.getPixelWidth = function() {};P.getPixelHeight = function() {};P.scaleToSize = function(w, h) {};P.scaleToWidth = function(w) {};P.scaleToHeight = function(h) {};P.crop = function(x, y, w, h) {};P.toJPGData = function() {};P.toPNGData = function() {};P.toRGBAData = function() {};P.releaseImage = function() {};var CaveImageForBrowser = function() {CaveImage.call(this);this.image = null;};CaveImageForBrowser.prototype = (function(o) { function F() {}; F.prototype = o; return(new F()); }) (CaveImage.prototype);var P = CaveImageForBrowser.prototype;P.constructor = CaveImageForBrowser;P._t = {"CaveImageForBrowser" : true,"CaveImage" : true};CaveImageForBrowser.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveImageForBrowser"] === true);};CaveImageForBrowser.NEW = function() {var v = new CaveImageForBrowser();return(v.CTOR());};P.CTOR = function() {this.image = null;if(CaveImage.prototype.CTOR.call(this) == null) {return(null);}return(this);};P.getSource = function() {if(this.image != null) {return(this.image.src);}return(null);};P.getPixelWidth = function() {if(this.image == null) {return(0);}return(this.image.width);};P.getPixelHeight = function() {if(this.image == null) {return(0);}return(this.image.height);};P.scaleToSize = function(w, h) {console.log("[cave.ImageForBrowser.scaleToSize] (ImageForBrowser@target_browser.sling:51:1): Not implemented");return(null);};P.scaleToWidth = function(w) {console.log("[cave.ImageForBrowser.scaleToWidth] (ImageForBrowser@target_browser.sling:57:1): Not implemented");return(null);};P.scaleToHeight = function(h) {console.log("[cave.ImageForBrowser.scaleToHeight] (ImageForBrowser@target_browser.sling:63:1): Not implemented");return(null);};P.crop = function(x, y, w, h) {console.log("[cave.ImageForBrowser.crop] (ImageForBrowser@target_browser.sling:69:1): Not implemented");return(null);};P.toJPGData = function() {console.log("[cave.ImageForBrowser.toJPGData] (ImageForBrowser@target_browser.sling:75:1): Not implemented");return(null);};P.toPNGData = function() {console.log("[cave.ImageForBrowser.toPNGData] (ImageForBrowser@target_browser.sling:81:1): Not implemented");return(null);};P.toRGBAData = function() {console.log("[cave.ImageForBrowser.toRGBAData] (ImageForBrowser@target_browser.sling:87:1): Not implemented");return(null);};P.releaseImage = function() {console.log("[cave.ImageForBrowser.releaseImage] (ImageForBrowser@target_browser.sling:93:1): Not implemented");};var CaveImageSheet = function() {this.sheet = null;this.cols = null;this.rows = null;this.sourceSkipX = null;this.sourceSkipY = null;this.sourceImageWidth = null;this.sourceImageHeight = null;this.maxImages = null;};var P = CaveImageSheet.prototype;P._t = {"CaveImageSheet" : true};CaveImageSheet.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveImageSheet"] === true);};CaveImageSheet.NEW = function() {var v = new CaveImageSheet();return(v.CTOR());};P.CTOR = function() {this.maxImages = -1;this.sourceImageHeight = -1;this.sourceImageWidth = -1;this.sourceSkipY = 0;this.sourceSkipX = 0;this.rows = -1;this.cols = -1;this.sheet = null;return(this);};P.toImages = function(resizeToWidth, resizeToHeight) {if(!(this.sheet != null)) {return(null);}var cols = this.cols;var rows = this.rows;var fwidth = this.sourceImageWidth;if(fwidth < 1) {fwidth = (this.sheet.getPixelWidth() - this.sourceSkipX) / cols;}else {cols = (this.sheet.getPixelWidth() - this.sourceSkipX) / fwidth;}var fheight = this.sourceImageHeight;if(fheight < 1) {fheight = (this.sheet.getPixelHeight() - this.sourceSkipY) / rows;}else {rows = (this.sheet.getPixelHeight() - this.sourceSkipY) / fheight;}var frames = new Array();var x = 0;var y = 0;for(y = 0 ; y < rows ; y++) {for(x = 0 ; x < cols ; x++) {var img = this.sheet.crop(x * fwidth, y * fheight, fwidth, fheight);if(resizeToWidth > 0) {img = img.scaleToSize(resizeToWidth, resizeToHeight);}frames.push(img);if(this.maxImages > 0 && CapeVector.getSize(frames) >= this.maxImages) {return(frames);}}}return(frames);};P.getSheet = function() {return(this.sheet);};P.setSheet = function(v) {this.sheet = v;return(this);};P.getCols = function() {return(this.cols);};P.setCols = function(v) {this.cols = v;return(this);};P.getRows = function() {return(this.rows);};P.setRows = function(v) {this.rows = v;return(this);};P.getSourceSkipX = function() {return(this.sourceSkipX);};P.setSourceSkipX = function(v) {this.sourceSkipX = v;return(this);};P.getSourceSkipY = function() {return(this.sourceSkipY);};P.setSourceSkipY = function(v) {this.sourceSkipY = v;return(this);};P.getSourceImageWidth = function() {return(this.sourceImageWidth);};P.setSourceImageWidth = function(v) {this.sourceImageWidth = v;return(this);};P.getSourceImageHeight = function() {return(this.sourceImageHeight);};P.setSourceImageHeight = function(v) {this.sourceImageHeight = v;return(this);};P.getMaxImages = function() {return(this.maxImages);};P.setMaxImages = function(v) {this.maxImages = v;return(this);};var CaveKeyEvent = function() {this.action = null;this.keyCode = null;this.stringValue = null;this.shift = null;this.control = null;this.command = null;this.alt = null;this.isConsumed = null;};var P = CaveKeyEvent.prototype;CaveKeyEvent.ACTION_NONE = 0;CaveKeyEvent.ACTION_DOWN = 1;CaveKeyEvent.ACTION_UP = 2;CaveKeyEvent.KEY_NONE = 0;CaveKeyEvent.KEY_SPACE = 1;CaveKeyEvent.KEY_ENTER = 2;CaveKeyEvent.KEY_TAB = 3;CaveKeyEvent.KEY_ESCAPE = 4;CaveKeyEvent.KEY_BACKSPACE = 5;CaveKeyEvent.KEY_SHIFT = 6;CaveKeyEvent.KEY_CONTROL = 7;CaveKeyEvent.KEY_ALT = 8;CaveKeyEvent.KEY_CAPSLOCK = 9;CaveKeyEvent.KEY_NUMLOCK = 10;CaveKeyEvent.KEY_LEFT = 11;CaveKeyEvent.KEY_UP = 12;CaveKeyEvent.KEY_RIGHT = 13;CaveKeyEvent.KEY_DOWN = 14;CaveKeyEvent.KEY_INSERT = 15;CaveKeyEvent.KEY_DELETE = 16;CaveKeyEvent.KEY_HOME = 17;CaveKeyEvent.KEY_END = 18;CaveKeyEvent.KEY_PAGEUP = 19;CaveKeyEvent.KEY_PAGEDOWN = 20;CaveKeyEvent.KEY_F1 = 21;CaveKeyEvent.KEY_F2 = 22;CaveKeyEvent.KEY_F3 = 23;CaveKeyEvent.KEY_F4 = 24;CaveKeyEvent.KEY_F5 = 25;CaveKeyEvent.KEY_F6 = 26;CaveKeyEvent.KEY_F7 = 27;CaveKeyEvent.KEY_F8 = 28;CaveKeyEvent.KEY_F9 = 29;CaveKeyEvent.KEY_F10 = 30;CaveKeyEvent.KEY_F11 = 31;CaveKeyEvent.KEY_F12 = 32;CaveKeyEvent.KEY_SUPER = 33;CaveKeyEvent.KEY_BACK = 34;P._t = {"CaveKeyEvent" : true};CaveKeyEvent.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveKeyEvent"] === true);};CaveKeyEvent.NEW = function() {var v = new CaveKeyEvent();return(v.CTOR());};P.CTOR = function() {this.isConsumed = false;this.alt = false;this.command = false;this.control = false;this.shift = false;this.stringValue = null;this.keyCode = 0;this.action = 0;return(this);};P.consume = function() {this.isConsumed = true;};P.isKeyPress = function(key) {if(this.action === CaveKeyEvent.ACTION_DOWN && this.keyCode === key) {return(true);}return(false);};P.isKey = function(key) {if(this.keyCode === key) {return(true);}return(false);};P.isString = function(value) {if(value === this.stringValue) {return(true);}return(false);};P.isCharacter = function(value) {if(!(this.stringValue == null) && CapeString.getChar(this.stringValue, 0) === value) {return(true);}return(false);};P.clear = function() {this.action = 0;this.keyCode = 0;this.stringValue = null;this.isConsumed = false;};P.getAction = function() {return(this.action);};P.setAction = function(v) {this.action = v;return(this);};P.getKeyCode = function() {return(this.keyCode);};P.setKeyCode = function(v) {this.keyCode = v;return(this);};P.getStringValue = function() {return(this.stringValue);};P.setStringValue = function(v) {this.stringValue = v;return(this);};P.getShift = function() {return(this.shift);};P.setShift = function(v) {this.shift = v;return(this);};P.getControl = function() {return(this.control);};P.setControl = function(v) {this.control = v;return(this);};P.getCommand = function() {return(this.command);};P.setCommand = function(v) {this.command = v;return(this);};P.getAlt = function() {return(this.alt);};P.setAlt = function(v) {this.alt = v;return(this);};var CaveKeyListener = {};CaveKeyListener.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveKeyListener"] === true);};var CaveLength = function() {this.value = null;this.unit = null;};var P = CaveLength.prototype;CaveLength.UNIT_POINT = 0;CaveLength.UNIT_MILLIMETER = 1;CaveLength.UNIT_MICROMETER = 2;CaveLength.UNIT_NANOMETER = 3;CaveLength.UNIT_INCH = 4;P._t = {"CaveLength" : true};CaveLength.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveLength"] === true);};CaveLength.NEW = function() {var v = new CaveLength();return(v.CTOR());};P.CTOR = function() {this.unit = 0;this.value = 0.0;return(this);};CaveLength.asPoints = function(value, ppi) {return(CaveLength.forString(value).toPoints(ppi));};CaveLength.forString = function(value) {var v = CaveLength.NEW();v.parse(value);return(v);};CaveLength.forPoints = function(value) {var v = CaveLength.NEW();v.setValue(value);v.setUnit(CaveLength.UNIT_POINT);return(v);};CaveLength.forMilliMeters = function(value) {var v = CaveLength.NEW();v.setValue(value);v.setUnit(CaveLength.UNIT_MILLIMETER);return(v);};CaveLength.forMicroMeters = function(value) {var v = CaveLength.NEW();v.setValue(value);v.setUnit(CaveLength.UNIT_MICROMETER);return(v);};CaveLength.forNanoMeters = function(value) {var v = CaveLength.NEW();v.setValue(value);v.setUnit(CaveLength.UNIT_NANOMETER);return(v);};CaveLength.forInches = function(value) {var v = CaveLength.NEW();v.setValue(value);v.setUnit(CaveLength.UNIT_INCH);return(v);};CaveLength.forValue = function(value, unit) {var v = CaveLength.NEW();v.setValue(value);v.setUnit(unit);return(v);};CaveLength.forStringAsPoints = function(value, ppi) {var v = CaveLength.NEW();v.parse(value);v.setValue(v.toPoints(ppi));v.setUnit(CaveLength.UNIT_POINT);return(v);};P.parse = function(value) {if(value == null) {this.value = 0;this.unit = CaveLength.UNIT_POINT;return;}var i = 0;var n = 0;var it = CapeString.iterate(value);while(true) {var c = it.getNextChar();if(c.charCodeAt() < 1) {break;}else if(c.charCodeAt() >= '0'.charCodeAt() && c.charCodeAt() <= '9'.charCodeAt()) {i *= 10;i += (c.charCodeAt() - '0'.charCodeAt());}else {break;}n++;}this.value = i;var suffix = CapeString.subStringWithStringAndSignedInteger(value, n);if(CapeString.isEmpty(suffix)) {this.unit = CaveLength.UNIT_POINT;}else if(suffix === "pt" || suffix === "px") {this.unit = CaveLength.UNIT_POINT;}else if(suffix === "mm") {this.unit = CaveLength.UNIT_MILLIMETER;}else if(suffix === "um") {this.unit = CaveLength.UNIT_MICROMETER;}else if(suffix === "nm") {this.unit = CaveLength.UNIT_NANOMETER;}else if(suffix === "in") {this.unit = CaveLength.UNIT_INCH;}else {this.unit = CaveLength.UNIT_POINT;}};P.toPoints = function(ppi) {if(this.unit === CaveLength.UNIT_POINT) {return(~~(this.value));}if(this.unit === CaveLength.UNIT_MILLIMETER) {var v = this.value * ppi / 25;if(this.value > 0 && v < 1) {v = 1;}return(~~(v));}if(this.unit === CaveLength.UNIT_MICROMETER) {var v = this.value * ppi / 25000;if(this.value > 0 && v < 1) {v = 1;}return(~~(v));}if(this.unit === CaveLength.UNIT_NANOMETER) {var v = this.value * ppi / 25000000;if(this.value > 0 && v < 1) {v = 1;}return(~~(v));}if(this.unit === CaveLength.UNIT_INCH) {var v = this.value * ppi;if(this.value > 0 && v < 1) {v = 1;}return(~~(v));}return(0);};P.getValue = function() {return(this.value);};P.setValue = function(v) {this.value = v;return(this);};P.getUnit = function() {return(this.unit);};P.setUnit = function(v) {this.unit = v;return(this);};var CavePointerEvent = function() {this.pointerId = null;this.action = null;this.x = null;this.y = null;this.isConsumed = null;};var P = CavePointerEvent.prototype;CavePointerEvent.DOWN = 0;CavePointerEvent.MOVE = 1;CavePointerEvent.CANCEL = 2;CavePointerEvent.UP = 3;P._t = {"CavePointerEvent" : true};CavePointerEvent.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CavePointerEvent"] === true);};CavePointerEvent.NEW = function() {var v = new CavePointerEvent();return(v.CTOR());};P.CTOR = function() {this.isConsumed = false;this.y = 0.0;this.x = 0.0;this.action = 0;this.pointerId = 0;return(this);};P.consume = function() {this.isConsumed = true;};P.getPointerId = function() {return(this.pointerId);};P.setPointerId = function(value) {this.pointerId = value;return(this);};P.getAction = function() {return(this.action);};P.setAction = function(value) {this.action = value;return(this);};P.getX = function() {return(this.x);};P.setX = function(value) {this.x = value;return(this);};P.getY = function() {return(this.y);};P.setY = function(value) {this.y = value;return(this);};P.isInside = function(xc, yc, width, height) {if(this.x >= xc && this.x < xc + width && this.y >= yc && this.y < yc + height) {return(true);}return(false);};var CavePointerListener = {};CavePointerListener.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CavePointerListener"] === true);};var CavePosition = function() {this.x = null;this.y = null;};var P = CavePosition.prototype;P._t = {"CavePosition" : true};CavePosition.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CavePosition"] === true);};CavePosition.NEW = function() {var v = new CavePosition();return(v.CTOR());};P.CTOR = function() {this.y = 0.0;this.x = 0.0;return(this);};P.getX = function() {return(this.x);};P.setX = function(v) {this.x = v;return(this);};P.getY = function() {return(this.y);};P.setY = function(v) {this.y = v;return(this);};var CaveRenderer = {};CaveRenderer.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveRenderer"] === true);};var CaveRenderingContext = function() {};var P = CaveRenderingContext.prototype;CaveRenderingContext.REPEAT_BOTH = 0;CaveRenderingContext.REPEAT_X = 1;CaveRenderingContext.REPEAT_Y = 2;CaveRenderingContext.REPEAT_NONE = 3;CaveRenderingContext.LINE_CAP_BUTT = 0;CaveRenderingContext.LINE_CAP_ROUND = 1;CaveRenderingContext.LINE_CAP_SQUARE = 2;CaveRenderingContext.LINE_JOIN_MITER = 0;CaveRenderingContext.LINE_JOIN_BEVEL = 1;CaveRenderingContext.LINE_JOIN_ROUND = 2;CaveRenderingContext.ALIGN_START = 0;CaveRenderingContext.ALIGN_END = 1;CaveRenderingContext.ALIGN_CENTER = 2;CaveRenderingContext.ALIGN_LEFT = 3;CaveRenderingContext.ALIGN_RIGHT = 4;CaveRenderingContext.BASELINE_ALPHABETIC = 0;CaveRenderingContext.BASELINE_TOP = 1;CaveRenderingContext.BASELINE_HANGING = 2;CaveRenderingContext.BASELINE_MIDDLE = 3;CaveRenderingContext.BASELINE_IDEOGRAPHIC = 4;CaveRenderingContext.BASELINE_BOTTOM = 5;P._t = {"CaveRenderingContext" : true};CaveRenderingContext.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveRenderingContext"] === true);};CaveRenderingContext.NEW = function() {var v = new CaveRenderingContext();return(v.CTOR());};P.CTOR = function() {return(this);};P.setFillStyle = function(style) {};P.setStrokeStyle = function(style) {};P.setShadowColor = function(color) {};P.setShadowBlur = function(blur) {};P.setShadowOffsetX = function(offset) {};P.setShadowOffsetY = function(offset) {};P.createLinearGradient = function(x0, y0, x1, y1) {};P.createPattern = function(image, repeat) {};P.createRadialGradient = function(x0, y0, r0, x1, y1, r1) {};P.addColorStop = function(gradient, index, color) {};P.setLineCap = function(cap) {};P.setLineJoin = function(join) {};P.setLineWidth = function(width) {};P.setMiterLimit = function(limit) {};P.rect = function(x, y, width, height) {};P.fillRect = function(x, y, width, height) {};P.strokeRect = function(x, y, width, height) {};P.clearRect = function(x, y, width, height) {};P.fill = function() {};P.stroke = function() {};P.beginPath = function() {};P.moveTo = function(x, y) {};P.closePath = function() {};P.lineTo = function(x, y) {};P.clip = function() {};P.quadraticCurveTo = function(cpx, cpy, x, y) {};P.bezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {};P.arc = function(x, y, r, sAngle, eAngle, counterclockwise) {};P.arcTo = function(x1, y1, x2, y2, r) {};P.isPointInPath = function(x, y) {};P.scale = function(scalewidth, scaleheight) {};P.rotate = function(angle) {};P.translate = function(x, y) {};P.transform = function(a, b, c, d, e, f) {};P.setTransform = function(a, b, c, d, e, f) {};P.setFont = function(font) {};P.setTextAlign = function(align) {};P.setTextBaseline = function(baseline) {};P.fillText = function(text, x, y, maxWidth) {};P.strokeText = function(text, x, y, maxWidth) {};P.measureTextWidth = function(text) {};P.drawImage = function(img, x, y) {};P.drawAndScaleImage = function(img, x, y, width, height) {};P.drawAndProcessImage = function(img, sx, sy, swidth, sheight, x, y, width, height) {};P.setGlobalAlpha = function(alpha) {};P.save = function() {};P.restore = function() {};var CaveRenderingContextForHTMLCanvas = function() {CaveRenderingContext.call(this);this.ctx = null;};CaveRenderingContextForHTMLCanvas.prototype = (function(o) { function F() {}; F.prototype = o; return(new F()); }) (CaveRenderingContext.prototype);var P = CaveRenderingContextForHTMLCanvas.prototype;P.constructor = CaveRenderingContextForHTMLCanvas;P._t = {"CaveRenderingContextForHTMLCanvas" : true,"CaveRenderingContext" : true};CaveRenderingContextForHTMLCanvas.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveRenderingContextForHTMLCanvas"] === true);};CaveRenderingContextForHTMLCanvas.NEW = function() {var v = new CaveRenderingContextForHTMLCanvas();return(v.CTOR());};P.CTOR = function() {this.ctx = null;if(CaveRenderingContext.prototype.CTOR.call(this) == null) {return(null);}return(this);};CaveRenderingContextForHTMLCanvas.forElement = function(element) {if(!(element != null)) {return(null);}return(CaveRenderingContextForHTMLCanvas.forContext(element.getContext("2d")));};CaveRenderingContextForHTMLCanvas.forContext = function(ctx) {if(!(ctx != null)) {return(null);}var v = CaveRenderingContextForHTMLCanvas.NEW();v.setCtx(ctx);return(v);};P.setFillStyle = function(style) {var fs = style;if(fs != null) {if(typeof(fs) === 'string') {fs = CaveColor.forString(fs);}if(CaveColor.IS_INSTANCE(fs)) {fs = fs.toHtmlCompatibleString();}}this.ctx.fillStyle = fs;};P.setStrokeStyle = function(style) {var fs = style;if(fs != null) {if(typeof(fs) === 'string') {fs = CaveColor.forString(fs);}if(CaveColor.IS_INSTANCE(fs)) {fs = fs.toHtmlCompatibleString();}}this.ctx.strokeStyle = fs;};P.setShadowColor = function(color) {var ccs = null;if(color != null) {ccs = color.toHtmlCompatibleString();}this.ctx.shadowColor = ccs;};P.setShadowBlur = function(blur) {this.ctx.shadowBlur = blur;};P.setShadowOffsetX = function(offset) {this.ctx.shadowOffsetX = offset;};P.setShadowOffsetY = function(offset) {this.ctx.shadowOffsetY = offset;};P.createLinearGradient = function(x0, y0, x1, y1) {return(this.ctx.createLinearGradient(x0, y0, x1, y1));};P.createPattern = function(image, repeat) {var himg = null;var browserImage = (CaveImageForBrowser.IS_INSTANCE(image) ? image : null);if(browserImage != null) {himg = browserImage.image;}var rpts = null;if(repeat === CaveRenderingContext.REPEAT_NONE) {rpts = "no-repeat";}else if(repeat === CaveRenderingContext.REPEAT_X) {rpts = "repeat-x";}else if(repeat === CaveRenderingContext.REPEAT_Y) {rpts = "repeat-y";}else {rpts = "repeat";}return(this.ctx.createPattern(himg, rpts));};P.createRadialGradient = function(x0, y0, r0, x1, y1, r1) {return(this.ctx.createRadialGradient(x0, y0, r0, x1, y1, r1));};P.addColorStop = function(gradient, index, color) {if(!(gradient != null)) {return;}var ccs = null;if(color != null) {ccs = color.toHtmlCompatibleString();}};P.setLineCap = function(cap) {var v = null;if(cap === CaveRenderingContext.LINE_CAP_SQUARE) {v = "square";}else if(cap === CaveRenderingContext.LINE_CAP_ROUND) {v = "round";}else {v = "butt";}this.ctx.lineCap = v;};P.setLineJoin = function(join) {var v = null;if(join === CaveRenderingContext.LINE_JOIN_BEVEL) {v = "bevel";}else if(join === CaveRenderingContext.LINE_JOIN_ROUND) {v = "round";}else {v = "miter";}this.ctx.lineJoin = v;};P.setLineWidth = function(width) {this.ctx.lineWidth = width;};P.setMiterLimit = function(limit) {this.ctx.miterLimit = limit;};P.rect = function(x, y, width, height) {this.ctx.rect(x, y, width, height);};P.fillRect = function(x, y, width, height) {this.ctx.fillRect(x, y, width, height);};P.strokeRect = function(x, y, width, height) {this.ctx.strokeRect(x, y, width, height);};P.clearRect = function(x, y, width, height) {this.ctx.clearRect(x, y, width, height);};P.fill = function() {this.ctx.fill();};P.stroke = function() {this.ctx.stroke();};P.beginPath = function() {this.ctx.beginPath();};P.moveTo = function(x, y) {this.ctx.moveTo(x, y);};P.closePath = function() {this.ctx.closePath();};P.lineTo = function(x, y) {this.ctx.lineTo(x, y);};P.clip = function() {this.ctx.clip();};P.quadraticCurveTo = function(cpx, cpy, x, y) {this.ctx.quadraticCurveTo(cpx, cpy, x, y);};P.bezierCurveTo = function(cp1x, cp1y, cp2x, cp2y, x, y) {this.ctx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);};P.arc = function(x, y, r, sAngle, eAngle, counterclockwise) {this.ctx.arc(x, y, r, sAngle, eAngle, counterclockwise);};P.arcTo = function(x1, y1, x2, y2, r) {this.ctx.arcTo(x1, y1, x2, y2, r);};P.isPointInPath = function(x, y) {return(this.ctx.isPointInPath(x, y));};P.scale = function(scalewidth, scaleheight) {this.ctx.scale(scalewidth, scaleheight);};P.rotate = function(angle) {this.ctx.rotate(angle);};P.translate = function(x, y) {this.ctx.translate(x, y);};P.transform = function(a, b, c, d, e, f) {this.ctx.transform(a, b, c, d, e, f);};P.setTransform = function(a, b, c, d, e, f) {this.ctx.setTransform(a, b, c, d, e, f);};P.toCssCompatibleString = function(font) {if(!(font != null)) {return(null);}var sb = CapeStringBuilder.NEW();if(font.getItalic()) {sb.appendString("italic");}if(font.getBold()) {if(sb.count() > 0) {sb.appendCharacter(' ');}sb.appendString("bold");}var size = font.getSize();if(size != null) {if(sb.count() > 0) {sb.appendCharacter(' ');}sb.appendString(CapeString.forInteger(size.toPoints(96)));sb.appendString("px");}var name = font.getName();if(CapeString.isNotEmpty(name)) {if(sb.count() > 0) {sb.appendCharacter(' ');}sb.appendString(name);}return(sb.toString());};P.setFont = function(font) {var fonts = null;if(font != null) {fonts = this.toCssCompatibleString(font);}this.ctx.font = fonts;};P.setTextAlign = function(align) {var v = null;if(align === CaveRenderingContext.ALIGN_END) {v = "end";}else if(align === CaveRenderingContext.ALIGN_CENTER) {v = "center";}else if(align === CaveRenderingContext.ALIGN_LEFT) {v = "left";}else if(align === CaveRenderingContext.ALIGN_RIGHT) {v = "right";}else {v = "start";}this.ctx.textAlign = v;};P.setTextBaseline = function(baseline) {var v = null;if(baseline === CaveRenderingContext.BASELINE_TOP) {v = "top";}else if(baseline === CaveRenderingContext.BASELINE_HANGING) {v = "hanging";}else if(baseline === CaveRenderingContext.BASELINE_MIDDLE) {v = "middle";}else if(baseline === CaveRenderingContext.BASELINE_IDEOGRAPHIC) {v = "ideographic";}else if(baseline === CaveRenderingContext.BASELINE_BOTTOM) {v = "bottom";}else {v = "alphabetic";}this.ctx.textBaseline = v;};P.fillText = function(text, x, y, maxWidth) {var mw = maxWidth;if(mw <= 0) {mw = undefined;}this.ctx.fillText(text, x, y, mw);};P.strokeText = function(text, x, y, maxWidth) {var mw = maxWidth;if(mw <= 0) {mw = undefined;}this.ctx.strokeText(text, x, y, mw);};P.measureTextWidth = function(text) {if(text == null) {return(0.0);}var sz = this.ctx.measureText(text);if(sz == null) {return(0.0);}var v = 0.0;v = sz.width;return(v);};P.drawImage = function(img, x, y) {var bimg = (CaveImageForBrowser.IS_INSTANCE(img) ? img : null);if(!(bimg != null)) {return;}var himg = bimg.image;if(!(himg != null)) {return;}this.ctx.drawImage(himg, x, y);};P.drawAndScaleImage = function(img, x, y, width, height) {var bimg = (CaveImageForBrowser.IS_INSTANCE(img) ? img : null);if(!(bimg != null)) {return;}var himg = bimg.image;if(!(himg != null)) {return;}this.ctx.drawImage(himg, x, y, width, height);};P.drawAndProcessImage = function(img, sx, sy, swidth, sheight, x, y, width, height) {var bimg = (CaveImageForBrowser.IS_INSTANCE(img) ? img : null);if(!(bimg != null)) {return;}var himg = bimg.image;if(!(himg != null)) {return;}this.ctx.drawImage(himg, sx, sy, swidth, sheight, x, y, width, height);};P.setGlobalAlpha = function(alpha) {this.ctx.globalAlpha = alpha;};P.save = function() {this.ctx.save();};P.restore = function() {this.ctx.restore();};P.getCtx = function() {return(this.ctx);};P.setCtx = function(v) {this.ctx = v;return(this);};var CaveScreen = function() {};var P = CaveScreen.prototype;P._t = {"CaveScreen" : true};CaveScreen.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveScreen"] === true);};CaveScreen.NEW = function() {var v = new CaveScreen();return(v.CTOR());};P.CTOR = function() {return(this);};var CaveScreenWithContext = {};CaveScreenWithContext.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveScreenWithContext"] === true);};var CaveSize = function() {this.width = null;this.height = null;};var P = CaveSize.prototype;P._t = {"CaveSize" : true};CaveSize.IS_INSTANCE = function(o) {return(o != null && o._t != null && o._t["CaveSize"] === true);};CaveSize.NEW = function() {var v = new CaveSize();return(v.CTOR());};P.CTOR = function() {this.height = 0.0;this.width = 0.0;return(this);};P.getWidth = function() {return(this.width);};P.setWidth = function(v) {this.width = v;return(this);};P.getHeight = function() {return(this.height);};P.setHeight = function(v) {this.height = v;return(this);};