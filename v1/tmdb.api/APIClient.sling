
/*
* This file is part of TheMovieGuide App
* Copyright (c) 2018
* All rights reserved.
*/

class is JSONAPIClientWithGui:

import cave
import cave.ui
import capex.web

func create(context as GuiApplicationContext, parentWidget as Widget) static as this
{
	assert context && parentWidget:
		Log.error(context, VALUE "__THIS__" .. ": Failed to create instance")
	instance = new this()
	Log.debug(context, "[" .. VALUE "__THIS__" .. "]: Using the configured API URL '" .. TMDB_API_BASE_URL .. "'")
	instance.setApiUrl(TMDB_API_BASE_URL)
	instance.setContext(context)
	instance.setParentWidget(parentWidget)
	instance.setApiKey(VALUE "API_KEY")
	instance.setApiImageBaseUrl(TMDB_IMAGE_BASE_URL)
	Log.debug(context, VALUE "__THIS__" .. ": New instance successfully created")
	return instance
}

ctor:
	setApiUrl("/")

const TMDB_IMAGE_BASE_URL = "https://image.tmdb.org/t/p/w780/"
const TMDB_API_BASE_URL = "https://api.themoviedb.org/3"

prop apiKey as string
prop apiImageBaseUrl as string
var instance static as this

func getInstance static as this:
	return instance

func getFullURL(api as string) override as string
{
	var key = "api_key=" .. apiKey
	var url = getApiUrl()
	if String.isEmpty(url):
		return "/"
	url = url .. api
	var separator = "?"
	if String.contains(url, "?"):
		separator = "&"
	return url .. separator .. key
}

func getImageURL(image as string) as string:
	return apiImageBaseUrl .. image .. "?api_key=" .. apiKey

// MOVIES

func getPopularMovies(callback as function<void, DynamicMap, Error>)
{
	var cb final = callback
	doGet("/movie/popular", func(response as DynamicMap) {
		cb(response, null)
	}, func(error as Error) {
		cb(null, error)
	})
}

func discoverMovies(callback as function<void, DynamicMap, Error>)
{
	var cb final = callback
	doGet("/discover/movie", func(response as DynamicMap) {
		cb(response, null)
	}, func(error as Error) {
		cb(null, error)
	})
}

func searchMovies(query as string, callback as function<void, DynamicMap, Error>)
{
	var cb final = callback
	doGet("/search/movie?query=" .. query, func(response as DynamicMap) {
		cb(response, null)
	}, func(error as Error) {
		cb(null, error)
	})
}

func getCreditsForMovie(movieId as string, callback as function<void, DynamicMap, Error>)
{
	var cb final = callback
	doGet("/movie/" .. movieId .. "/credits", func(response as DynamicMap) {
		cb(response, null)
	}, func(error as Error) {
		cb(null, error)
	})
}
